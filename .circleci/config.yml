version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 60
      - run:
          name: "before_test: setup db"
          command: docker-compose run web rails db:create db:migrate
      - run:
          name: test
          command: docker-compose run web rspec
      - run:
          name: docker-compose down
          command: docker-compose down
      - run:
          name: build and push Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build --rm=false -t   ${DOCKERHUB_LOGIN}/${DOCKERHUB_URI}:$TAG .
            docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
            docker push ${DOCKERHUB_LOGIN}/${DOCKERHUB_URI}:$TAG
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: "build docker image"
          command: docker build --rm=false -t registry.heroku.com/${HEROKU_APP_NAME}/web .
      - run:
          name: setup heroku command
          command: bash .circleci/setup_heroku.sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          # HEROKU_AUTH_TOKEN is generated by `heroku auth:token`
          name: "push container to registry.heroku.com"
          command: |
            docker login --username=_ --password=${HEROKU_API_KEY} registry.heroku.com
            docker push registry.heroku.com/${HEROKU_APP_NAME}/web
      - run:
          name: heroku db migrate
          command: heroku run rails db:migrate --app ${HEROKU_APP_NAME}
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master